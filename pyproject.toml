[tool.poetry]
name = "yuta"
version = "0.1.0"
description = ""
authors = ["Yann <iamyanndias@gmail.com>"]
readme = "README.md"
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = "3.9.11"
flask = "^3.0.3"
pymongo = "^4.7.2"
pydantic-mongo = "^2.3.0"
pydantic = "^2.7.2"
flask-openapi3 = "^3.1.1"
flask-wtf = "^1.2.1"
openai = "0.28.1"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
ruff = "^0.4.7"
pytest = "^8.2.1"
pre-commit = "^3.7.1"

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.ruff]
line-length = 120

[tool.ruff.lint]

exclude = ["jupyter_notebook_config.py"]
select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
dev = "app:run"
